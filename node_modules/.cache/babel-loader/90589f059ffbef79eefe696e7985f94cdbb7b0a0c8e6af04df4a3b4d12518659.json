{"ast":null,"code":"var _jsxFileName = \"/Users/cindyzhang/cindy/src/components/FadeInSection.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nexport default function FadeInSection(props) {\n  _s();\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n  React.useLayoutEffect(() => {\n    // useLayoutEffect is a version of useEffect that fires before the browser repaints the screen.\n\n    let observerRefValue = null; // <-- variable to hold ref value, because domRef may be unmounted by the time we call unobserve\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setVisible(entry.isIntersecting);\n        }\n      });\n    });\n    if (domRef.current) {\n      observer.observe(domRef.current);\n      observerRefValue = domRef.current; // <-- save ref value\n    }\n    return () => {\n      if (observerRefValue) observer.unobserve(observerRefValue); // <-- use saved value\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `fade-in-section ${isVisible ? \"is-visible\" : \"\"}`,\n    style: {\n      transitionDelay: `${props.delay}`\n    },\n    ref: domRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\n// import React from \"react\";\n\n// export default function FadeInSection(props) {\n//   const [isVisible, setVisible] = React.useState(false);\n//   const domRef = React.useRef();\n//   React.useEffect(() => {\n//     const observer = new IntersectionObserver(entries => {\n//       entries.forEach(entry => {\n//         if (entry.isIntersecting) {\n//           setVisible(entry.isIntersecting);\n//         }\n//       });\n//     });\n//     observer.observe(domRef.current);\n//     return () => observer.unobserve(domRef.current);\n//   }, []);\n//   return (\n//     <div\n//       className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n//       style={{ transitionDelay: `${props.delay}` }}\n//       ref={domRef}\n//     >\n//       {props.children}\n//     </div>\n//   );\n// }\n_s(FadeInSection, \"bKSi4X8GTSB5OLt5p/TJO+8dySM=\");\n_c = FadeInSection;\nvar _c;\n$RefreshReg$(_c, \"FadeInSection\");","map":{"version":3,"names":["React","FadeInSection","props","_s","isVisible","setVisible","useState","domRef","useRef","useLayoutEffect","observerRefValue","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","observe","unobserve","createElement","className","style","transitionDelay","delay","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/cindyzhang/cindy/src/components/FadeInSection.js"],"sourcesContent":["import React from \"react\";\n\nexport default function FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n\n  React.useLayoutEffect(() => {  // useLayoutEffect is a version of useEffect that fires before the browser repaints the screen.\n\n    let observerRefValue = null; // <-- variable to hold ref value, because domRef may be unmounted by the time we call unobserve\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setVisible(entry.isIntersecting);\n        }\n      });\n    });\n\n    if (domRef.current) {\n      observer.observe(domRef.current);\n      observerRefValue = domRef.current; // <-- save ref value\n    }\n  \n    return () => {\n      if (observerRefValue) observer.unobserve(observerRefValue); // <-- use saved value\n    };\n  }, []);\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n      style={{ transitionDelay: `${props.delay}` }}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n\n// import React from \"react\";\n\n// export default function FadeInSection(props) {\n//   const [isVisible, setVisible] = React.useState(false);\n//   const domRef = React.useRef();\n//   React.useEffect(() => {\n//     const observer = new IntersectionObserver(entries => {\n//       entries.forEach(entry => {\n//         if (entry.isIntersecting) {\n//           setVisible(entry.isIntersecting);\n//         }\n//       });\n//     });\n//     observer.observe(domRef.current);\n//     return () => observer.unobserve(domRef.current);\n//   }, []);\n//   return (\n//     <div\n//       className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n//       style={{ transitionDelay: `${props.delay}` }}\n//       ref={domRef}\n//     >\n//       {props.children}\n//     </div>\n//   );\n// }\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMC,MAAM,GAAGP,KAAK,CAACQ,MAAM,CAAC,CAAC;EAE7BR,KAAK,CAACS,eAAe,CAAC,MAAM;IAAG;;IAE7B,IAAIC,gBAAgB,GAAG,IAAI,CAAC,CAAC;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAI;MACnDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBX,UAAU,CAACU,KAAK,CAACC,cAAc,CAAC;QAClC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIT,MAAM,CAACU,OAAO,EAAE;MAClBN,QAAQ,CAACO,OAAO,CAACX,MAAM,CAACU,OAAO,CAAC;MAChCP,gBAAgB,GAAGH,MAAM,CAACU,OAAO,CAAC,CAAC;IACrC;IAEA,OAAO,MAAM;MACX,IAAIP,gBAAgB,EAAEC,QAAQ,CAACQ,SAAS,CAACT,gBAAgB,CAAC,CAAC,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBACEV,KAAA,CAAAoB,aAAA;IACEC,SAAS,EAAG,mBAAkBjB,SAAS,GAAG,YAAY,GAAG,EAAG,EAAE;IAC9DkB,KAAK,EAAE;MAAEC,eAAe,EAAG,GAAErB,KAAK,CAACsB,KAAM;IAAE,CAAE;IAC7CC,GAAG,EAAElB,MAAO;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEX7B,KAAK,CAAC8B,QACJ,CAAC;AAEV;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA7B,EAAA,CA5DwBF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}